// Given an array A[] consisting of only 0s, 1s, and 2s. The task is to write a 
//function that sorts the given array. The functions should put all 0s first, then all 1s and all 2s in last.

// This problem is also the same as the famous “Dutch National Flag problem”. 
//The problem was proposed by Edsger Dijkstra. The problem is as follows:

// Given N balls of colour red, white or blue arranged in a line in random order
//. You have to arrange all the balls such that the balls with the same colours are adjacent with the order 
//of the balls, with the order of the colours being red, white and blue 
//(i.e., all red coloured balls come first then the white coloured balls and then the blue coloured balls). 


// 0,0,2,1,0,1,2,1,1


#include <bits/stdc++.h>
using namespace std;

vector<int> DutchNationalflag(vector<int> &nums)
{
    int n=nums.size();
    int l=0,h=n-1,mid=0;
    while(mid<=h)
    {
      if(nums[mid]==0)
      {
          swap(nums[l++],nums[mid++]);
      }
      else if(nums[mid]==2)
      {
          swap(nums[h--],nums[mid]);
      }
      else
      {
         mid++;
      }
    }
    return nums;
}

int main()
{
    vector<int> arr={0,0,2,1,0,1,2,1,1};
    arr=DutchNationalflag(arr);
    for(auto ele:arr)
    {
        cout<<ele<<" ";
    }
    cout<<endl;
}
